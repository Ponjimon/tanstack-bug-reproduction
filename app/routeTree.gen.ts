/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ReportsIndexImport } from './routes/reports.index'
import { Route as ReportsReportIdImport } from './routes/reports.$reportId'
import { Route as ReportsReportIdEditImport } from './routes/reports_.$reportId.edit'

// Create/Update Routes

const ReportsIndexRoute = ReportsIndexImport.update({
  path: '/reports/',
  getParentRoute: () => rootRoute,
} as any)

const ReportsReportIdRoute = ReportsReportIdImport.update({
  path: '/reports/$reportId',
  getParentRoute: () => rootRoute,
} as any)

const ReportsReportIdEditRoute = ReportsReportIdEditImport.update({
  path: '/reports/$reportId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/reports/$reportId': {
      id: '/reports/$reportId'
      path: '/reports/$reportId'
      fullPath: '/reports/$reportId'
      preLoaderRoute: typeof ReportsReportIdImport
      parentRoute: typeof rootRoute
    }
    '/reports/': {
      id: '/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsIndexImport
      parentRoute: typeof rootRoute
    }
    '/reports/$reportId/edit': {
      id: '/reports/$reportId/edit'
      path: '/reports/$reportId/edit'
      fullPath: '/reports/$reportId/edit'
      preLoaderRoute: typeof ReportsReportIdEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/reports/$reportId': typeof ReportsReportIdRoute
  '/reports': typeof ReportsIndexRoute
  '/reports/$reportId/edit': typeof ReportsReportIdEditRoute
}

export interface FileRoutesByTo {
  '/reports/$reportId': typeof ReportsReportIdRoute
  '/reports': typeof ReportsIndexRoute
  '/reports/$reportId/edit': typeof ReportsReportIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/reports/$reportId': typeof ReportsReportIdRoute
  '/reports/': typeof ReportsIndexRoute
  '/reports/$reportId/edit': typeof ReportsReportIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/reports/$reportId' | '/reports' | '/reports/$reportId/edit'
  fileRoutesByTo: FileRoutesByTo
  to: '/reports/$reportId' | '/reports' | '/reports/$reportId/edit'
  id:
    | '__root__'
    | '/reports/$reportId'
    | '/reports/'
    | '/reports/$reportId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ReportsReportIdRoute: typeof ReportsReportIdRoute
  ReportsIndexRoute: typeof ReportsIndexRoute
  ReportsReportIdEditRoute: typeof ReportsReportIdEditRoute
}

const rootRouteChildren: RootRouteChildren = {
  ReportsReportIdRoute: ReportsReportIdRoute,
  ReportsIndexRoute: ReportsIndexRoute,
  ReportsReportIdEditRoute: ReportsReportIdEditRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/reports/$reportId",
        "/reports/",
        "/reports/$reportId/edit"
      ]
    },
    "/reports/$reportId": {
      "filePath": "reports.$reportId.tsx"
    },
    "/reports/": {
      "filePath": "reports.index.tsx"
    },
    "/reports/$reportId/edit": {
      "filePath": "reports_.$reportId.edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
